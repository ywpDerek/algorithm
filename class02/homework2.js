// 对于一个无序数组A，请设计一个算法，求出需要排序的最短子数组的长度。
// 给定一个整数数组A及它的大小n，请返回最短子数组的长度。
// 测试样例：
// [1, 5, 3, 4, 2, 6, 7], 7;
// 返回 4

function main(arr, n) {
  const sortArr = arr.slice(0).sort((a, b) => a - b);

  let i = 0;
  let j = n - 1;

  while (i < n && arr[i] === sortArr[i]) {
    i++
  }

  // 其实这个地方写 j >= 0 也是可以的，但是如果确实存在排序不对的问题的话
  // 那么到索引2的位置，如果还没有， 那就肯定是 0 和 1的位置是不对的
  // 如果是一个有序数组的话， 这个方法就会返回负数
  while (j > 1 && arr[j] === sortArr[j]) {
    j--;
  }

  return j - i + 1;
}

console.log(main([2, 1, 2, 3, 4, 5, 6], 7));